@model Domain.Models.TaskProject
@using Domain.DataAccess
@using Domain.Models


@inject TrackingDb Context

@using Microsoft.AspNetCore.Identity;
@inject UserManager<User> UserManager
@inject SignInManager<User> SignInManager

@{
    ViewData["Title"] = Model.Title +  " - редактирование";
}

<h4>@Model.Title - редактирование</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="TaskType" class="control-label"></label>
                <select asp-for="TaskType" class="form-control">
                    @if (Model.TaskType == TaskType.Analytics)
                    {
                        <option selected value="@TaskType.Analytics">Аналитка</option>
                        <option value="@TaskType.Programming">Программирование</option>
                        <option value="@TaskType.Documenting">Документирование</option>
                    }

                    else if (Model.TaskType == TaskType.Programming)
                    {
                        <option value="@TaskType.Analytics">Аналитка</option>
                        <option selected value="@TaskType.Programming">Программирование</option>
                        <option value="@TaskType.Documenting">Документирование</option>
                    }

                    else if (Model.TaskType == TaskType.Documenting)
                    {
                        <option value="@TaskType.Analytics">Аналитка</option>
                        <option value="@TaskType.Programming">Программирование</option>
                        <option selected value="@TaskType.Documenting">Документирование</option>
                    }
                </select>
                <span asp-validation-for="TaskType" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="UserId" class="control-label"></label>
                <select asp-for="UserId" class="form-control">
                    @foreach (var user in Context.Users.Where(x => x.UserType == UserType.DefaultUser).ToList())
                    {
                        @if (Model.UserId.ToString() == user.Id)
                        {
                            <option selected value="@user.Id">@user.Email</option>
                        }
                        else
                        {
                            <option value="@user.Id">@user.Email</option>
                        }

                    }
                </select>
                <span asp-validation-for="UserId" class="text-danger"></span>
            </div>


            <div class="form-group">
                <label asp-for="StartDate" class="control-label"></label>
                <input asp-for="StartDate" class="form-control" />
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EndDate" class="control-label"></label>
                <input asp-for="EndDate" class="form-control" />
                <span asp-validation-for="EndDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Сохранить" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
